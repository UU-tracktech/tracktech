events {

}


# RTMP configuration
rtmp {
  server {
    # Print to log so we can see what happens
    access_log /dev/stdout;
    
    # Listen for incoming stream on standard RTMP port
    listen 1935;

    # Set the chunk size
    chunk_size 4000;

    application pull {
      # Turn on HLS
      live on;
      hls on;

      # Run this from start (example)
      exec_static /usr/bin/ffmpeg -rtsp_transport tcp -i rtsp://wowzaec2demo.streamlock.net/vod/mp4:BigBuckBunny_115k.mov -vcodec libx264 -vf "format=yuv420p" -c:a aac -f flv rtmp://localhost/pull/movie;
      exec_static /usr/bin/ffmpeg -i http://81.83.10.9:8001/mjpg/video.mjpg -vcodec libx264 -vf "format=yuv420p" -c:a aac -f flv rtmp://localhost/pull/kitchen;

      # Where to stream the data to locally
      hls_path /mnt/hls/;

      # Amount of seconds per fragment
      hls_fragment 1;

      # Amount of seconds total for playlist
      hls_playlist_length 60;

      # disable consuming the stream from nginx as rtmp
      deny play all;
    }
  }
}

http {
  sendfile off;
  tcp_nopush on;

  directio 512;
  default_type application/octet-stream;

  # Print to log so we can see what happens
  access_log /dev/stdout;
  error_log /dev/stdout;

  server {
    listen 8080;

    location / {
      # Disable cache
      add_header 'Cache-Control' 'no-cache';

      # CORS setup
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length';

      # allow CORS preflight requests
      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }

      types {
        application/vnd.apple.mpegurl m3u8;
        video/mp2t ts;
      }

      root /mnt/;
    }
  }
}