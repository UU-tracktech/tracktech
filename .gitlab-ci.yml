stages:
  - build
  - removal
  - test
  - coverage
  - documentation

camera_processor_documentation:
  stage: documentation
  trigger:
    include: CameraProcessor/.gitlab-ci-docs.yml
  rules:
    - when: never
      changes:
        - CameraProcessor/*

camera-processor_docker_test_build:
  stage: build
  script:
    - cd CameraProcessor
    - docker build -f Dockerfile.test -t camera-processor-test .
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - CameraProcessor/*
      when: always
        
camera-processor_unit-testing:
  stage: test
  needs: [camera-processor_docker_test_build, camera_container_removal]
  script:
    - cd CameraProcessor
    - docker run --name camera-processor-test-container camera-processor-test python3.8 -m coverage run -m pytest tests/unittests --junitxml=report.xml | python3.8 -m coverage report -m | python3.8 -m coverage-badge
    - docker cp camera-processor-test-container:/app/report.xml report.xml
  artifacts:
    reports:
      junit: CameraProcessor/report.xml
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - CameraProcessor/*
      when: always
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'

orchestrator_docker_build:
  stage: build
  script:
    - docker build -t processor-orchestrator --target testing ./ProcessorOrchestrator
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - ProcessorOrchestrator/*
      when: always
    
camera_container_removal:
  stage: removal
  needs: [camera-processor_docker_test_build]
  allow_failure: true
  script:
    - docker rm -f camera-processor-test-container
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - CameraProcessor/*
      when: always

orchestrator_container_removal:
  stage: removal
  needs: [orchestrator_docker_build]
  allow_failure: true
  script:
    - docker rm -f po-unit-testing
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - ProcessorOrchestrator/*
      when: always

orchestrator_unit-testing:
  stage: test
  needs: [orchestrator_docker_build, orchestrator_container_removal]
  script:
    - docker run --name po-unit-testing processor-orchestrator
    - docker cp po-unit-testing:report.xml ProcessorOrchestrator/report.xml
  artifacts:
    reports:
      junit: ProcessorOrchestrator/report.xml
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - ProcessorOrchestrator/*
      when: always
     

interface_docker_build:
  stage: build
  script:
    - cd interface
    - docker build -t interface -f Dockerfile.test .
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - interface/*
      when: always

interface_unit-testing:
  stage: test
  needs: [interface_docker_build]
  script:
    - docker run interface
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - interface/*
      when: always